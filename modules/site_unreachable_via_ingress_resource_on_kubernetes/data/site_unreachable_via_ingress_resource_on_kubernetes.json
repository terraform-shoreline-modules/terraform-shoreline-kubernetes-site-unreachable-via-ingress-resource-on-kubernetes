{
  "name": "site_unreachable_via_ingress_resource_on_kubernetes",
  "description": "This incident type occurs when a website or service deployed on Kubernetes is not accessible via the ingress resource. The incident may be caused by various issues such as the ingress controller not running, misconfigured ingress resources, incorrect service selectors, and no running pods associated with the service. Troubleshooting steps may involve checking the logs of the ingress controller, inspecting the created ingress resources, describing the service and pods, and making sure the ports and endpoints are properly configured.",
  "params": [
    {
      "name": "BACKEND_PORT",
      "value": ""
    },
    {
      "name": "LABEL",
      "value": ""
    },
    {
      "name": "SERVICE_NAME",
      "value": ""
    },
    {
      "name": "INGRESS_NAME",
      "value": ""
    },
    {
      "name": "NAMESPACE",
      "value": ""
    },
    {
      "name": "BACKEND_SERVICE",
      "value": ""
    },
    {
      "name": "POD_NAME",
      "value": ""
    },
    {
      "name": "HOST_NAME",
      "value": ""
    },
    {
      "name": "K8S_CLUSTER_NAME",
      "value": ""
    }
  ],
  "cells": [
    {
      "name": "cell_1",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Site Unreachable via Ingress Resource on Kubernetes\nThis incident type occurs when a website or service deployed on Kubernetes is not accessible via the ingress resource. The incident may be caused by various issues such as the ingress controller not running, misconfigured ingress resources, incorrect service selectors, and no running pods associated with the service. Troubleshooting steps may involve checking the logs of the ingress controller, inspecting the created ingress resources, describing the service and pods, and making sure the ports and endpoints are properly configured."
    },
    {
      "name": "cell_2",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the connectivity to website"
    },
    {
      "name": "cell_3",
      "type": "OP_LANG",
      "enabled": true,
      "content": "host | host_name=$HOST_NAME | invoke_check_website_connectivity()"
    },
    {
      "name": "cell_4",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if ingress controller is running"
    },
    {
      "name": "cell_5",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get pods -n ${NAMESPACE}`"
    },
    {
      "name": "cell_6",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the logs of ingress controller"
    },
    {
      "name": "cell_7",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl logs ${POD_NAME} -n ${NAMESPACE}`"
    },
    {
      "name": "cell_8",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the created ingress resources"
    },
    {
      "name": "cell_9",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get ingress -n ${NAMESPACE}`"
    },
    {
      "name": "cell_10",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Describe the ingress resources and verify the ingress resource configuration"
    },
    {
      "name": "cell_11",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl describe ingress ${INGRESS_NAME} -n ${NAMESPACE}`"
    },
    {
      "name": "cell_12",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Describe the service"
    },
    {
      "name": "cell_13",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl describe service ${SERVICE_NAME} -n ${NAMESPACE}`"
    },
    {
      "name": "cell_14",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if there are running pods associated with the service"
    },
    {
      "name": "cell_15",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get pods -n ${NAMESPACE} -l ${LABEL}`"
    },
    {
      "name": "cell_16",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Make sure the ports are matching to what you expected"
    },
    {
      "name": "cell_17",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl describe service ${SERVICE_NAME} -n ${NAMESPACE}`"
    },
    {
      "name": "cell_18",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the IP column to make sure it is going to the correct pod IP"
    },
    {
      "name": "cell_19",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get pods -n ${NAMESPACE} -o wide`"
    },
    {
      "name": "cell_20",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the ingress configuration settings to ensure that they are properly set up and routing traffic to the correct destination."
    },
    {
      "name": "cell_21",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | random=1 | limit=1 | invoke_ingress_verification($SERVICE_NAME, $INGRESS_NAME, $NAMESPACE)"
    },
    {
      "name": "cell_22",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the created ingress resources and verify that they are properly configured to route traffic to the intended service and port."
    },
    {
      "name": "cell_23",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | random=1 | limit=1 | invoke_update_ingress_backend($BACKEND_PORT, $INGRESS_NAME, $NAMESPACE, $BACKEND_SERVICE)"
    }
  ]
}